(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{1286:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(0);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(3);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1336);\nfunction _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn\'t been initialised - super() hasn\'t been called"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\nvar Toaster =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Toaster, _Component);\n\n  function Toaster() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Toaster);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Toaster)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), "state", {\n      visible: true\n    });\n\n    _defineProperty(_assertThisInitialized(_this), "handleDismiss", function () {\n      _this.setState({\n        visible: false\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Toaster, [{\n    key: "componentDidMount",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.timeout) {\n        this.timer = setTimeout(function () {\n          _this2.setState({\n            visible: false\n          });\n        }, this.props.timeout);\n      }\n    }\n  }, {\n    key: "componentWillUnmount",\n    value: function componentWillUnmount() {\n      if (this.props.timeout) clearTimeout(this.timer);\n    }\n  }, {\n    key: "render",\n    value: function render() {\n      var visible = this.state.visible;\n      var _this$props = this.props,\n          message = _this$props.message,\n          success = _this$props.success,\n          error = _this$props.error,\n          warning = _this$props.warning,\n          size = _this$props.size;\n\n      if (visible) {\n        return react__WEBPACK_IMPORTED_MODULE_0___default.a.createElement(semantic_ui_react__WEBPACK_IMPORTED_MODULE_2__[/* default */ "a"], {\n          floating: true,\n          onDismiss: this.handleDismiss,\n          header: \'Message from Server!\',\n          content: message,\n          positive: success,\n          negative: error,\n          warning: warning,\n          size: size\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return Toaster;\n}(react__WEBPACK_IMPORTED_MODULE_0__["Component"]);\n\n_defineProperty(Toaster, "propTypes", {\n  timeout: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.number,\n  message: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string.isRequired,\n  success: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  error: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  warning: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.bool,\n  size: prop_types__WEBPACK_IMPORTED_MODULE_1___default.a.string\n});\n\n_defineProperty(Toaster, "defaultProps", {\n  size: \'small\'\n});\n\n/* harmony default export */ __webpack_exports__["a"] = (Toaster);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHAvY29tcG9uZW50cy9Ub2FzdGVyL2luZGV4LmpzPzAyNzQiXSwibmFtZXMiOlsiVG9hc3RlciIsInZpc2libGUiLCJzZXRTdGF0ZSIsInByb3BzIiwidGltZW91dCIsInRpbWVyIiwic2V0VGltZW91dCIsImNsZWFyVGltZW91dCIsInN0YXRlIiwibWVzc2FnZSIsInN1Y2Nlc3MiLCJlcnJvciIsIndhcm5pbmciLCJzaXplIiwiaGFuZGxlRGlzbWlzcyIsIkNvbXBvbmVudCIsIlByb3BUeXBlcyIsIm51bWJlciIsInN0cmluZyIsImlzUmVxdWlyZWQiLCJib29sIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBOztJQUVNQSxPOzs7Ozs7Ozs7Ozs7Ozs7Ozs7NERBWUk7QUFBRUMsYUFBTyxFQUFFO0FBQVgsSzs7b0VBV1EsWUFBTTtBQUNwQixZQUFLQyxRQUFMLENBQWM7QUFBRUQsZUFBTyxFQUFFO0FBQVgsT0FBZDtBQUNELEs7Ozs7Ozs7d0NBWm1CO0FBQUE7O0FBQ2xCLFVBQUksS0FBS0UsS0FBTCxDQUFXQyxPQUFmLEVBQXdCO0FBQ3RCLGFBQUtDLEtBQUwsR0FBYUMsVUFBVSxDQUFDLFlBQU07QUFDNUIsZ0JBQUksQ0FBQ0osUUFBTCxDQUFjO0FBQUVELG1CQUFPLEVBQUU7QUFBWCxXQUFkO0FBQ0QsU0FGc0IsRUFFcEIsS0FBS0UsS0FBTCxDQUFXQyxPQUZTLENBQXZCO0FBR0Q7QUFDRjs7OzJDQUNzQjtBQUNyQixVQUFJLEtBQUtELEtBQUwsQ0FBV0MsT0FBZixFQUF3QkcsWUFBWSxDQUFDLEtBQUtGLEtBQU4sQ0FBWjtBQUN6Qjs7OzZCQUlRO0FBQUEsVUFDQ0osT0FERCxHQUNhLEtBQUtPLEtBRGxCLENBQ0NQLE9BREQ7QUFBQSx3QkFFNEMsS0FBS0UsS0FGakQ7QUFBQSxVQUVDTSxPQUZELGVBRUNBLE9BRkQ7QUFBQSxVQUVVQyxPQUZWLGVBRVVBLE9BRlY7QUFBQSxVQUVtQkMsS0FGbkIsZUFFbUJBLEtBRm5CO0FBQUEsVUFFMEJDLE9BRjFCLGVBRTBCQSxPQUYxQjtBQUFBLFVBRW1DQyxJQUZuQyxlQUVtQ0EsSUFGbkM7O0FBR1AsVUFBSVosT0FBSixFQUFhO0FBQ1gsZUFDRSwyREFBQyxpRUFBRDtBQUNFLGtCQUFRLE1BRFY7QUFDVyxtQkFBUyxFQUFFLEtBQUthLGFBRDNCO0FBQzBDLGdCQUFNLEVBQUUsc0JBRGxEO0FBRUUsaUJBQU8sRUFBRUwsT0FGWDtBQUVvQixrQkFBUSxFQUFFQyxPQUY5QjtBQUV1QyxrQkFBUSxFQUFFQyxLQUZqRDtBQUV3RCxpQkFBTyxFQUFFQyxPQUZqRTtBQUUwRSxjQUFJLEVBQUVDO0FBRmhGLFVBREY7QUFNRDs7QUFDRCxhQUFPLElBQVA7QUFDRDs7OztFQXRDbUJFLCtDOztnQkFBaEJmLE8sZUFDZTtBQUNqQkksU0FBTyxFQUFFWSxpREFBUyxDQUFDQyxNQURGO0FBRWpCUixTQUFPLEVBQUVPLGlEQUFTLENBQUNFLE1BQVYsQ0FBaUJDLFVBRlQ7QUFHakJULFNBQU8sRUFBRU0saURBQVMsQ0FBQ0ksSUFIRjtBQUlqQlQsT0FBSyxFQUFFSyxpREFBUyxDQUFDSSxJQUpBO0FBS2pCUixTQUFPLEVBQUVJLGlEQUFTLENBQUNJLElBTEY7QUFNakJQLE1BQUksRUFBRUcsaURBQVMsQ0FBQ0U7QUFOQyxDOztnQkFEZmxCLE8sa0JBU2tCO0FBQ3BCYSxNQUFJLEVBQUU7QUFEYyxDOztBQWdDVGIsZ0VBQWYiLCJmaWxlIjoiMTI4Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgTWVzc2FnZSB9IGZyb20gJ3NlbWFudGljLXVpLXJlYWN0JztcblxuY2xhc3MgVG9hc3RlciBleHRlbmRzIENvbXBvbmVudCB7XG4gIHN0YXRpYyBwcm9wVHlwZXMgPSB7XG4gICAgdGltZW91dDogUHJvcFR5cGVzLm51bWJlcixcbiAgICBtZXNzYWdlOiBQcm9wVHlwZXMuc3RyaW5nLmlzUmVxdWlyZWQsXG4gICAgc3VjY2VzczogUHJvcFR5cGVzLmJvb2wsXG4gICAgZXJyb3I6IFByb3BUeXBlcy5ib29sLFxuICAgIHdhcm5pbmc6IFByb3BUeXBlcy5ib29sLFxuICAgIHNpemU6IFByb3BUeXBlcy5zdHJpbmcsXG4gIH07XG4gIHN0YXRpYyBkZWZhdWx0UHJvcHMgPSB7XG4gICAgc2l6ZTogJ3NtYWxsJyxcbiAgfTtcbiAgc3RhdGUgPSB7IHZpc2libGU6IHRydWUgfTtcbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgaWYgKHRoaXMucHJvcHMudGltZW91dCkge1xuICAgICAgdGhpcy50aW1lciA9IHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHsgdmlzaWJsZTogZmFsc2UgfSk7XG4gICAgICB9LCB0aGlzLnByb3BzLnRpbWVvdXQpO1xuICAgIH1cbiAgfVxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICBpZiAodGhpcy5wcm9wcy50aW1lb3V0KSBjbGVhclRpbWVvdXQodGhpcy50aW1lcik7XG4gIH1cbiAgaGFuZGxlRGlzbWlzcyA9ICgpID0+IHtcbiAgICB0aGlzLnNldFN0YXRlKHsgdmlzaWJsZTogZmFsc2UgfSk7XG4gIH07XG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCB7IHZpc2libGUgfSA9IHRoaXMuc3RhdGU7XG4gICAgY29uc3QgeyBtZXNzYWdlLCBzdWNjZXNzLCBlcnJvciwgd2FybmluZywgc2l6ZSB9ID0gdGhpcy5wcm9wcztcbiAgICBpZiAodmlzaWJsZSkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPE1lc3NhZ2VcbiAgICAgICAgICBmbG9hdGluZyBvbkRpc21pc3M9e3RoaXMuaGFuZGxlRGlzbWlzc30gaGVhZGVyPXsnTWVzc2FnZSBmcm9tIFNlcnZlciEnfVxuICAgICAgICAgIGNvbnRlbnQ9e21lc3NhZ2V9IHBvc2l0aXZlPXtzdWNjZXNzfSBuZWdhdGl2ZT17ZXJyb3J9IHdhcm5pbmc9e3dhcm5pbmd9IHNpemU9e3NpemV9XG4gICAgICAgIC8+XG4gICAgICApO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBUb2FzdGVyO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///1286\n')},1449:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(0);\nvar react_default = /*#__PURE__*/__webpack_require__.n(react);\n\n// EXTERNAL MODULE: ./node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(3);\nvar prop_types_default = /*#__PURE__*/__webpack_require__.n(prop_types);\n\n// EXTERNAL MODULE: ./node_modules/reselect/es/index.js\nvar es = __webpack_require__(13);\n\n// EXTERNAL MODULE: ./node_modules/react-redux/lib/index.js\nvar lib = __webpack_require__(30);\n\n// EXTERNAL MODULE: ./node_modules/moment/src/moment.js + 48 modules\nvar moment = __webpack_require__(1311);\n\n// CONCATENATED MODULE: ./app/components/Profile/BasicInfo/constants.js\nvar UPDATE_BASIC_INFO_REQUEST = \"XcelTrip/Profile/BasicInfo/UPDATE_BASIC_INFO_REQUEST\";\nvar UPDATE_BASIC_INFO_SUCCESS = \"XcelTrip/Profile/BasicInfo/UPDATE_BASIC_INFO_SUCCESS\";\nvar UPDATE_BASIC_INFO_FAILURE = \"XcelTrip/Profile/BasicInfo/UPDATE_BASIC_INFO_FAILURE\";\nvar BASIC_INFO_CLEAR_STATE = \"XcelTrip/Profile/BasicInfo/BASIC_INFO_CLEAR_STATE\";\n// EXTERNAL MODULE: ./app/utils/action.js\nvar utils_action = __webpack_require__(12);\n\n// CONCATENATED MODULE: ./app/components/Profile/BasicInfo/actions.js\n\n\nvar actions_updateBasicInfoRequest = Object(utils_action[\"a\" /* default */])(UPDATE_BASIC_INFO_REQUEST, 'user', 'image');\nvar updateBasicInfoSuccess = Object(utils_action[\"a\" /* default */])(UPDATE_BASIC_INFO_SUCCESS, 'response');\nvar updateBasicInfoFailure = Object(utils_action[\"a\" /* default */])(UPDATE_BASIC_INFO_FAILURE, 'error');\nvar basicInfoClearState = Object(utils_action[\"a\" /* default */])(BASIC_INFO_CLEAR_STATE);\n// CONCATENATED MODULE: ./app/components/Profile/BasicInfo/selectors.js\n\n\nvar selectUpdateBasicInfo = function selectUpdateBasicInfo(state) {\n  return state.updateBasicInfo;\n};\n\nvar selectors_makeSelectSuccess = function makeSelectSuccess() {\n  return Object(es[\"a\" /* createSelector */])(selectUpdateBasicInfo, function (state) {\n    return state.get('success');\n  });\n};\n\nvar selectors_makeSelectResponse = function makeSelectResponse() {\n  return Object(es[\"a\" /* createSelector */])(selectUpdateBasicInfo, function (state) {\n    return state.get('response');\n  });\n};\n\nvar selectors_makeSelectError = function makeSelectError() {\n  return Object(es[\"a\" /* createSelector */])(selectUpdateBasicInfo, function (state) {\n    return state.get('error');\n  });\n};\n\nvar selectors_makeSelectRequesting = function makeSelectRequesting() {\n  return Object(es[\"a\" /* createSelector */])(selectUpdateBasicInfo, function (state) {\n    return state.get('requesting');\n  });\n};\n\nvar selectors_makeSelectUser = function makeSelectUser() {\n  return Object(es[\"a\" /* createSelector */])(selectUpdateBasicInfo, function (state) {\n    return state.get('user');\n  });\n};\n\n\n// EXTERNAL MODULE: ./app/containers/App/constants.js\nvar constants = __webpack_require__(28);\n\n// EXTERNAL MODULE: ./app/containers/App/selectors.js\nvar selectors = __webpack_require__(51);\n\n// EXTERNAL MODULE: ./node_modules/react-dropzone/dist/index.js\nvar dist = __webpack_require__(1426);\nvar dist_default = /*#__PURE__*/__webpack_require__.n(dist);\n\n// EXTERNAL MODULE: ./node_modules/react-avatar-editor/dist/index.js\nvar react_avatar_editor_dist = __webpack_require__(1427);\nvar react_avatar_editor_dist_default = /*#__PURE__*/__webpack_require__.n(react_avatar_editor_dist);\n\n// EXTERNAL MODULE: ./node_modules/semantic-ui-react/dist/es/collections/Form/Form.js + 11 modules\nvar Form = __webpack_require__(1259);\n\n// EXTERNAL MODULE: ./node_modules/semantic-ui-react/dist/es/elements/Button/Button.js + 3 modules\nvar Button = __webpack_require__(1275);\n\n// EXTERNAL MODULE: ./node_modules/semantic-ui-react/dist/es/modules/Dropdown/Dropdown.js + 6 modules\nvar Dropdown = __webpack_require__(1274);\n\n// EXTERNAL MODULE: ./app/components/common/Forms/FormField.js\nvar FormField = __webpack_require__(114);\n\n// EXTERNAL MODULE: ./app/assets/images/avatar.png\nvar avatar = __webpack_require__(642);\nvar avatar_default = /*#__PURE__*/__webpack_require__.n(avatar);\n\n// CONCATENATED MODULE: ./app/components/common/countries.js\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nvar Countries = [{\n  name: 'Afghanistan',\n  code: 'AF'\n}, {\n  name: 'Åland Islands',\n  code: 'AX'\n}, {\n  name: 'Albania',\n  code: 'AL'\n}, {\n  name: 'Algeria',\n  code: 'DZ'\n}, {\n  name: 'American Samoa',\n  code: 'AS'\n}, {\n  name: 'AndorrA',\n  code: 'AD'\n}, {\n  name: 'Angola',\n  code: 'AO'\n}, {\n  name: 'Anguilla',\n  code: 'AI'\n}, {\n  name: 'Antarctica',\n  code: 'AQ'\n}, {\n  name: 'Antigua and Barbuda',\n  code: 'AG'\n}, {\n  name: 'Argentina',\n  code: 'AR'\n}, {\n  name: 'Armenia',\n  code: 'AM'\n}, {\n  name: 'Aruba',\n  code: 'AW'\n}, {\n  name: 'Australia',\n  code: 'AU'\n}, {\n  name: 'Austria',\n  code: 'AT'\n}, {\n  name: 'Azerbaijan',\n  code: 'AZ'\n}, {\n  name: 'Bahamas',\n  code: 'BS'\n}, {\n  name: 'Bahrain',\n  code: 'BH'\n}, {\n  name: 'Bangladesh',\n  code: 'BD'\n}, {\n  name: 'Barbados',\n  code: 'BB'\n}, {\n  name: 'Belarus',\n  code: 'BY'\n}, {\n  name: 'Belgium',\n  code: 'BE'\n}, {\n  name: 'Belize',\n  code: 'BZ'\n}, {\n  name: 'Benin',\n  code: 'BJ'\n}, {\n  name: 'Bermuda',\n  code: 'BM'\n}, {\n  name: 'Bhutan',\n  code: 'BT'\n}, {\n  name: 'Bolivia',\n  code: 'BO'\n}, {\n  name: 'Bosnia and Herzegovina',\n  code: 'BA'\n}, {\n  name: 'Botswana',\n  code: 'BW'\n}, {\n  name: 'Bouvet Island',\n  code: 'BV'\n}, {\n  name: 'Brazil',\n  code: 'BR'\n}, {\n  name: 'British Indian Ocean Territory',\n  code: 'IO'\n}, {\n  name: 'Brunei Darussalam',\n  code: 'BN'\n}, {\n  name: 'Bulgaria',\n  code: 'BG'\n}, {\n  name: 'Burkina Faso',\n  code: 'BF'\n}, {\n  name: 'Burundi',\n  code: 'BI'\n}, {\n  name: 'Cambodia',\n  code: 'KH'\n}, {\n  name: 'Cameroon',\n  code: 'CM'\n}, {\n  name: 'Canada',\n  code: 'CA'\n}, {\n  name: 'Cape Verde',\n  code: 'CV'\n}, {\n  name: 'Cayman Islands',\n  code: 'KY'\n}, {\n  name: 'Central African Republic',\n  code: 'CF'\n}, {\n  name: 'Chad',\n  code: 'TD'\n}, {\n  name: 'Chile',\n  code: 'CL'\n}, {\n  name: 'China',\n  code: 'CN'\n}, {\n  name: 'Christmas Island',\n  code: 'CX'\n}, {\n  name: 'Cocos (Keeling) Islands',\n  code: 'CC'\n}, {\n  name: 'Colombia',\n  code: 'CO'\n}, {\n  name: 'Comoros',\n  code: 'KM'\n}, {\n  name: 'Congo',\n  code: 'CG'\n}, {\n  name: 'Congo, The Democratic Republic of the',\n  code: 'CD'\n}, {\n  name: 'Cook Islands',\n  code: 'CK'\n}, {\n  name: 'Costa Rica',\n  code: 'CR'\n}, {\n  name: \"Cote D'Ivoire\",\n  code: 'CI'\n}, {\n  name: 'Croatia',\n  code: 'HR'\n}, {\n  name: 'Cuba',\n  code: 'CU'\n}, {\n  name: 'Cyprus',\n  code: 'CY'\n}, {\n  name: 'Czech Republic',\n  code: 'CZ'\n}, {\n  name: 'Denmark',\n  code: 'DK'\n}, {\n  name: 'Djibouti',\n  code: 'DJ'\n}, {\n  name: 'Dominica',\n  code: 'DM'\n}, {\n  name: 'Dominican Republic',\n  code: 'DO'\n}, {\n  name: 'Ecuador',\n  code: 'EC'\n}, {\n  name: 'Egypt',\n  code: 'EG'\n}, {\n  name: 'El Salvador',\n  code: 'SV'\n}, {\n  name: 'Equatorial Guinea',\n  code: 'GQ'\n}, {\n  name: 'Eritrea',\n  code: 'ER'\n}, {\n  name: 'Estonia',\n  code: 'EE'\n}, {\n  name: 'Ethiopia',\n  code: 'ET'\n}, {\n  name: 'Falkland Islands (Malvinas)',\n  code: 'FK'\n}, {\n  name: 'Faroe Islands',\n  code: 'FO'\n}, {\n  name: 'Fiji',\n  code: 'FJ'\n}, {\n  name: 'Finland',\n  code: 'FI'\n}, {\n  name: 'France',\n  code: 'FR'\n}, {\n  name: 'French Guiana',\n  code: 'GF'\n}, {\n  name: 'French Polynesia',\n  code: 'PF'\n}, {\n  name: 'French Southern Territories',\n  code: 'TF'\n}, {\n  name: 'Gabon',\n  code: 'GA'\n}, {\n  name: 'Gambia',\n  code: 'GM'\n}, {\n  name: 'Georgia',\n  code: 'GE'\n}, {\n  name: 'Germany',\n  code: 'DE'\n}, {\n  name: 'Ghana',\n  code: 'GH'\n}, {\n  name: 'Gibraltar',\n  code: 'GI'\n}, {\n  name: 'Greece',\n  code: 'GR'\n}, {\n  name: 'Greenland',\n  code: 'GL'\n}, {\n  name: 'Grenada',\n  code: 'GD'\n}, {\n  name: 'Guadeloupe',\n  code: 'GP'\n}, {\n  name: 'Guam',\n  code: 'GU'\n}, {\n  name: 'Guatemala',\n  code: 'GT'\n}, {\n  name: 'Guernsey',\n  code: 'GG'\n}, {\n  name: 'Guinea',\n  code: 'GN'\n}, {\n  name: 'Guinea-Bissau',\n  code: 'GW'\n}, {\n  name: 'Guyana',\n  code: 'GY'\n}, {\n  name: 'Haiti',\n  code: 'HT'\n}, {\n  name: 'Heard Island and Mcdonald Islands',\n  code: 'HM'\n}, {\n  name: 'Holy See (Vatican City State)',\n  code: 'VA'\n}, {\n  name: 'Honduras',\n  code: 'HN'\n}, {\n  name: 'Hong Kong',\n  code: 'HK'\n}, {\n  name: 'Hungary',\n  code: 'HU'\n}, {\n  name: 'Iceland',\n  code: 'IS'\n}, {\n  name: 'India',\n  code: 'IN'\n}, {\n  name: 'Indonesia',\n  code: 'ID'\n}, {\n  name: 'Iran, Islamic Republic Of',\n  code: 'IR'\n}, {\n  name: 'Iraq',\n  code: 'IQ'\n}, {\n  name: 'Ireland',\n  code: 'IE'\n}, {\n  name: 'Isle of Man',\n  code: 'IM'\n}, {\n  name: 'Israel',\n  code: 'IL'\n}, {\n  name: 'Italy',\n  code: 'IT'\n}, {\n  name: 'Jamaica',\n  code: 'JM'\n}, {\n  name: 'Japan',\n  code: 'JP'\n}, {\n  name: 'Jersey',\n  code: 'JE'\n}, {\n  name: 'Jordan',\n  code: 'JO'\n}, {\n  name: 'Kazakhstan',\n  code: 'KZ'\n}, {\n  name: 'Kenya',\n  code: 'KE'\n}, {\n  name: 'Kiribati',\n  code: 'KI'\n}, {\n  name: \"Korea, Democratic People'S Republic of\",\n  code: 'KP'\n}, {\n  name: 'Korea, Republic of',\n  code: 'KR'\n}, {\n  name: 'Kuwait',\n  code: 'KW'\n}, {\n  name: 'Kyrgyzstan',\n  code: 'KG'\n}, {\n  name: \"Lao People'S Democratic Republic\",\n  code: 'LA'\n}, {\n  name: 'Latvia',\n  code: 'LV'\n}, {\n  name: 'Lebanon',\n  code: 'LB'\n}, {\n  name: 'Lesotho',\n  code: 'LS'\n}, {\n  name: 'Liberia',\n  code: 'LR'\n}, {\n  name: 'Libyan Arab Jamahiriya',\n  code: 'LY'\n}, {\n  name: 'Liechtenstein',\n  code: 'LI'\n}, {\n  name: 'Lithuania',\n  code: 'LT'\n}, {\n  name: 'Luxembourg',\n  code: 'LU'\n}, {\n  name: 'Macao',\n  code: 'MO'\n}, {\n  name: 'Macedonia, The Former Yugoslav Republic of',\n  code: 'MK'\n}, {\n  name: 'Madagascar',\n  code: 'MG'\n}, {\n  name: 'Malawi',\n  code: 'MW'\n}, {\n  name: 'Malaysia',\n  code: 'MY'\n}, {\n  name: 'Maldives',\n  code: 'MV'\n}, {\n  name: 'Mali',\n  code: 'ML'\n}, {\n  name: 'Malta',\n  code: 'MT'\n}, {\n  name: 'Marshall Islands',\n  code: 'MH'\n}, {\n  name: 'Martinique',\n  code: 'MQ'\n}, {\n  name: 'Mauritania',\n  code: 'MR'\n}, {\n  name: 'Mauritius',\n  code: 'MU'\n}, {\n  name: 'Mayotte',\n  code: 'YT'\n}, {\n  name: 'Mexico',\n  code: 'MX'\n}, {\n  name: 'Micronesia, Federated States of',\n  code: 'FM'\n}, {\n  name: 'Moldova, Republic of',\n  code: 'MD'\n}, {\n  name: 'Monaco',\n  code: 'MC'\n}, {\n  name: 'Mongolia',\n  code: 'MN'\n}, {\n  name: 'Montserrat',\n  code: 'MS'\n}, {\n  name: 'Morocco',\n  code: 'MA'\n}, {\n  name: 'Mozambique',\n  code: 'MZ'\n}, {\n  name: 'Myanmar',\n  code: 'MM'\n}, {\n  name: 'Namibia',\n  code: 'NA'\n}, {\n  name: 'Nauru',\n  code: 'NR'\n}, {\n  name: 'Nepal',\n  code: 'NP'\n}, {\n  name: 'Netherlands',\n  code: 'NL'\n}, {\n  name: 'Netherlands Antilles',\n  code: 'AN'\n}, {\n  name: 'New Caledonia',\n  code: 'NC'\n}, {\n  name: 'New Zealand',\n  code: 'NZ'\n}, {\n  name: 'Nicaragua',\n  code: 'NI'\n}, {\n  name: 'Niger',\n  code: 'NE'\n}, {\n  name: 'Nigeria',\n  code: 'NG'\n}, {\n  name: 'Niue',\n  code: 'NU'\n}, {\n  name: 'Norfolk Island',\n  code: 'NF'\n}, {\n  name: 'Northern Mariana Islands',\n  code: 'MP'\n}, {\n  name: 'Norway',\n  code: 'NO'\n}, {\n  name: 'Oman',\n  code: 'OM'\n}, {\n  name: 'Pakistan',\n  code: 'PK'\n}, {\n  name: 'Palau',\n  code: 'PW'\n}, {\n  name: 'Palestinian Territory, Occupied',\n  code: 'PS'\n}, {\n  name: 'Panama',\n  code: 'PA'\n}, {\n  name: 'Papua New Guinea',\n  code: 'PG'\n}, {\n  name: 'Paraguay',\n  code: 'PY'\n}, {\n  name: 'Peru',\n  code: 'PE'\n}, {\n  name: 'Philippines',\n  code: 'PH'\n}, {\n  name: 'Pitcairn',\n  code: 'PN'\n}, {\n  name: 'Poland',\n  code: 'PL'\n}, {\n  name: 'Portugal',\n  code: 'PT'\n}, {\n  name: 'Puerto Rico',\n  code: 'PR'\n}, {\n  name: 'Qatar',\n  code: 'QA'\n}, {\n  name: 'Reunion',\n  code: 'RE'\n}, {\n  name: 'Romania',\n  code: 'RO'\n}, {\n  name: 'Russian Federation',\n  code: 'RU'\n}, {\n  name: 'RWANDA',\n  code: 'RW'\n}, {\n  name: 'Saint Helena',\n  code: 'SH'\n}, {\n  name: 'Saint Kitts and Nevis',\n  code: 'KN'\n}, {\n  name: 'Saint Lucia',\n  code: 'LC'\n}, {\n  name: 'Saint Pierre and Miquelon',\n  code: 'PM'\n}, {\n  name: 'Saint Vincent and the Grenadines',\n  code: 'VC'\n}, {\n  name: 'Samoa',\n  code: 'WS'\n}, {\n  name: 'San Marino',\n  code: 'SM'\n}, {\n  name: 'Sao Tome and Principe',\n  code: 'ST'\n}, {\n  name: 'Saudi Arabia',\n  code: 'SA'\n}, {\n  name: 'Senegal',\n  code: 'SN'\n}, {\n  name: 'Serbia and Montenegro',\n  code: 'CS'\n}, {\n  name: 'Seychelles',\n  code: 'SC'\n}, {\n  name: 'Sierra Leone',\n  code: 'SL'\n}, {\n  name: 'Singapore',\n  code: 'SG'\n}, {\n  name: 'Slovakia',\n  code: 'SK'\n}, {\n  name: 'Slovenia',\n  code: 'SI'\n}, {\n  name: 'Solomon Islands',\n  code: 'SB'\n}, {\n  name: 'Somalia',\n  code: 'SO'\n}, {\n  name: 'South Africa',\n  code: 'ZA'\n}, {\n  name: 'South Georgia and the South Sandwich Islands',\n  code: 'GS'\n}, {\n  name: 'Spain',\n  code: 'ES'\n}, {\n  name: 'Sri Lanka',\n  code: 'LK'\n}, {\n  name: 'Sudan',\n  code: 'SD'\n}, {\n  name: 'Suriname',\n  code: 'SR'\n}, {\n  name: 'Svalbard and Jan Mayen',\n  code: 'SJ'\n}, {\n  name: 'Swaziland',\n  code: 'SZ'\n}, {\n  name: 'Sweden',\n  code: 'SE'\n}, {\n  name: 'Switzerland',\n  code: 'CH'\n}, {\n  name: 'Syrian Arab Republic',\n  code: 'SY'\n}, {\n  name: 'Taiwan, Province of China',\n  code: 'TW'\n}, {\n  name: 'Tajikistan',\n  code: 'TJ'\n}, {\n  name: 'Tanzania, United Republic of',\n  code: 'TZ'\n}, {\n  name: 'Thailand',\n  code: 'TH'\n}, {\n  name: 'Timor-Leste',\n  code: 'TL'\n}, {\n  name: 'Togo',\n  code: 'TG'\n}, {\n  name: 'Tokelau',\n  code: 'TK'\n}, {\n  name: 'Tonga',\n  code: 'TO'\n}, {\n  name: 'Trinidad and Tobago',\n  code: 'TT'\n}, {\n  name: 'Tunisia',\n  code: 'TN'\n}, {\n  name: 'Turkey',\n  code: 'TR'\n}, {\n  name: 'Turkmenistan',\n  code: 'TM'\n}, {\n  name: 'Turks and Caicos Islands',\n  code: 'TC'\n}, {\n  name: 'Tuvalu',\n  code: 'TV'\n}, {\n  name: 'Uganda',\n  code: 'UG'\n}, {\n  name: 'Ukraine',\n  code: 'UA'\n}, {\n  name: 'United Arab Emirates',\n  code: 'AE'\n}, {\n  name: 'United Kingdom',\n  code: 'GB'\n}, {\n  name: 'United States',\n  code: 'US'\n}, {\n  name: 'United States Minor Outlying Islands',\n  code: 'UM'\n}, {\n  name: 'Uruguay',\n  code: 'UY'\n}, {\n  name: 'Uzbekistan',\n  code: 'UZ'\n}, {\n  name: 'Vanuatu',\n  code: 'VU'\n}, {\n  name: 'Venezuela',\n  code: 'VE'\n}, {\n  name: 'Viet Nam',\n  code: 'VN'\n}, {\n  name: 'Virgin Islands, British',\n  code: 'VG'\n}, {\n  name: 'Virgin Islands, U.S.',\n  code: 'VI'\n}, {\n  name: 'Wallis and Futuna',\n  code: 'WF'\n}, {\n  name: 'Western Sahara',\n  code: 'EH'\n}, {\n  name: 'Yemen',\n  code: 'YE'\n}, {\n  name: 'Zambia',\n  code: 'ZM'\n}, {\n  name: 'Zimbabwe',\n  code: 'ZW'\n}];\nvar getCountries = function getCountries() {\n  var result = [];\n  Countries.map(function (country) {\n    result = [].concat(_toConsumableArray(result), [{\n      key: country.code,\n      value: country.name,\n      text: country.name\n    }]);\n  });\n  return result;\n};\n/* harmony default export */ var countries = (Countries);\n// EXTERNAL MODULE: ./app/components/Profile/assets/style.scss\nvar style = __webpack_require__(1339);\n\n// CONCATENATED MODULE: ./app/components/Profile/BasicInfo/BasicInfoForm.js\n\n\n\n\n\n\n\n\nvar BasicInfoForm_countries = countries.map(function (country) {\n  return react_default.a.createElement(\"option\", {\n    key: country.code,\n    value: country.name\n  }, country.name);\n});\nvar industryList = [{\n  key: '1',\n  value: 'Financial',\n  text: 'Financial'\n}, {\n  key: '2',\n  value: 'Health Care and Biomedical',\n  text: 'Health Care and Biomedical'\n}, {\n  key: '3',\n  value: 'Technology',\n  text: 'Technology'\n}, {\n  key: '4',\n  value: 'Cyber Security',\n  text: 'Cyber Security'\n}, {\n  key: '5',\n  value: 'Energy',\n  text: 'Energy'\n}, {\n  key: '6',\n  value: 'Insurance',\n  text: 'Insurance'\n}, {\n  key: '7',\n  value: 'Education',\n  text: 'Education'\n}];\n\nvar BasicInfoForm_BasicInfoForm = function BasicInfoForm(_ref) {\n  var date = _ref.date,\n      focused = _ref.focused,\n      onDateChange = _ref.onDateChange,\n      onFocusChange = _ref.onFocusChange,\n      isOutsideRange = _ref.isOutsideRange,\n      user = _ref.user,\n      avatarImage = _ref.avatarImage,\n      handleChange = _ref.handleChange,\n      handleDropDown = _ref.handleDropDown,\n      handleSubmit = _ref.handleSubmit,\n      handleCheckBox = _ref.handleCheckBox,\n      onDrop = _ref.onDrop,\n      handleGenderChange = _ref.handleGenderChange,\n      isLoading = _ref.isLoading,\n      datechange = _ref.datechange,\n      setEditorRef = _ref.setEditorRef,\n      onCrop = _ref.onCrop,\n      cropDialog = _ref.cropDialog,\n      newImage = _ref.newImage,\n      errors = _ref.errors;\n  return react_default.a.createElement(Form[\"a\" /* default */], {\n    onSubmit: handleSubmit,\n    className: \"py-2\"\n  }, react_default.a.createElement(\"h2\", {\n    className: \"main_title\"\n  }, \"Basic Info\"), react_default.a.createElement(Form[\"a\" /* default */].Field, {\n    className: \"img-editor-wrap\"\n  }, react_default.a.createElement(dist_default.a, {\n    onDrop: onDrop\n  }, react_default.a.createElement(\"img\", {\n    className: \"ui image\",\n    src: avatarImage || avatar_default.a,\n    alt: \"profile image\"\n  })), cropDialog && newImage && react_default.a.createElement(\"div\", {\n    className: \"img-editor \"\n  }, react_default.a.createElement(react_avatar_editor_dist_default.a, {\n    className: \"mb-3\",\n    image: avatarImage,\n    width: 250,\n    height: 250,\n    borderRadius: 5000,\n    scale: 1.2,\n    ref: setEditorRef\n  }), react_default.a.createElement(\"br\", null), react_default.a.createElement(Button[\"a\" /* default */], {\n    primary: true,\n    onClick: onCrop\n  }, \"Crop\"))), react_default.a.createElement(\"div\", {\n    className: \"form__elements\"\n  }, react_default.a.createElement(Form[\"a\" /* default */].Group, {\n    widths: \"equal\"\n  }, react_default.a.createElement(FormField[\"a\" /* default */], {\n    label: \"First Name\",\n    placeholder: \"First Name\",\n    name: \"first_name\",\n    value: user.first_name || '',\n    onChange: handleChange,\n    error: errors.first_name\n  }), react_default.a.createElement(FormField[\"a\" /* default */], {\n    label: \"Middle Name\",\n    placeholder: \"Middle Name\",\n    name: \"middle_name\",\n    value: user.middle_name || '',\n    onChange: handleChange,\n    error: errors.middle_name\n  }), react_default.a.createElement(FormField[\"a\" /* default */], {\n    label: \"Last Name\",\n    placeholder: \"Last Name\",\n    name: \"last_name\",\n    value: user.last_name || '',\n    onChange: handleChange,\n    error: errors.last_name\n  })), react_default.a.createElement(Form[\"a\" /* default */].Group, {\n    widths: \"equal\"\n  }, react_default.a.createElement(Form[\"a\" /* default */].Field, null, react_default.a.createElement(\"label\", null, \"User Email\"), react_default.a.createElement(\"input\", {\n    placeholder: \"username\",\n    name: \"username\",\n    value: user.username || '',\n    onChange: handleChange,\n    disabled: true\n  }))), react_default.a.createElement(FormField[\"a\" /* default */], {\n    label: \"Company\",\n    placeholder: \"Company Name\",\n    name: \"company_name\",\n    value: user.company_name || '',\n    onChange: handleChange,\n    error: errors.company_name\n  }), react_default.a.createElement(Form[\"a\" /* default */].Field, null, react_default.a.createElement(\"label\", null, \" Industry *\"), react_default.a.createElement(Dropdown[\"a\" /* default */], {\n    placeholder: \"Industry\",\n    className: \"form-control\",\n    name: \"industry\",\n    search: true,\n    selection: true,\n    fluid: true,\n    options: industryList || [],\n    onChange: handleDropDown,\n    value: user.industry || ''\n  }), errors.industry && react_default.a.createElement(\"span\", {\n    style: {\n      color: 'red'\n    }\n  }, errors.industry)), react_default.a.createElement(Form[\"a\" /* default */].Group, {\n    widths: \"equal\"\n  }, react_default.a.createElement(Form[\"a\" /* default */].Field, null, react_default.a.createElement(\"label\", null, \"Country\"), react_default.a.createElement(\"select\", {\n    style: {\n      padding: '8px 6px'\n    },\n    className: \"ui selection dropdown\",\n    name: \"country\",\n    onChange: handleChange,\n    value: user.country || ''\n  }, BasicInfoForm_countries))), react_default.a.createElement(Button[\"a\" /* default */], {\n    type: \"submit\",\n    primary: true,\n    loading: isLoading,\n    disabled: isLoading\n  }, \"Save\")));\n};\n\n/* harmony default export */ var BasicInfo_BasicInfoForm = (BasicInfoForm_BasicInfoForm);\n// EXTERNAL MODULE: ./app/components/Toaster/index.js\nvar Toaster = __webpack_require__(1286);\n\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.cjs.js\nvar redux_saga_effects_npm_proxy_cjs = __webpack_require__(7);\n\n// EXTERNAL MODULE: ./node_modules/react-router-redux/lib/index.js\nvar react_router_redux_lib = __webpack_require__(42);\n\n// EXTERNAL MODULE: ./app/containers/Login/actions.js\nvar actions = __webpack_require__(26);\n\n// EXTERNAL MODULE: ./app/utils/apiHelper.js + 3 modules\nvar apiHelper = __webpack_require__(45);\n\n// EXTERNAL MODULE: ./app/utils/getToken.js\nvar getToken = __webpack_require__(192);\n\n// CONCATENATED MODULE: ./app/components/Profile/BasicInfo/sagas.js\nvar _marked =\n/*#__PURE__*/\nregeneratorRuntime.mark(redirectOnSuccess),\n    _marked2 =\n/*#__PURE__*/\nregeneratorRuntime.mark(confirmBasicInfoUpdateFlow),\n    _marked3 =\n/*#__PURE__*/\nregeneratorRuntime.mark(profileBasicInfoUpdateWatcher);\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\nfunction redirectOnSuccess(user) {\n  var action, updatedUser;\n  return regeneratorRuntime.wrap(function redirectOnSuccess$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return Object(redux_saga_effects_npm_proxy_cjs[\"take\"])(UPDATE_BASIC_INFO_SUCCESS);\n\n        case 2:\n          action = _context.sent;\n          updatedUser = _objectSpread({}, user, {}, action.response.data);\n          _context.next = 6;\n          return Object(redux_saga_effects_npm_proxy_cjs[\"put\"])(Object(actions[\"x\" /* updateUserInfo */])(updatedUser));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction confirmBasicInfoUpdateFlow(action) {\n  var token, successWatcher;\n  return regeneratorRuntime.wrap(function confirmBasicInfoUpdateFlow$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          token = Object(getToken[\"a\" /* default */])();\n          _context2.next = 3;\n          return Object(redux_saga_effects_npm_proxy_cjs[\"fork\"])(redirectOnSuccess, action.user);\n\n        case 3:\n          successWatcher = _context2.sent;\n          _context2.next = 6;\n          return Object(redux_saga_effects_npm_proxy_cjs[\"fork\"])(apiHelper[\"a\" /* default */].multipartPost(\"user/data/\".concat(action.user._id), updateBasicInfoSuccess, updateBasicInfoFailure, action.user, action.image, token, 'put'));\n\n        case 6:\n          _context2.next = 8;\n          return Object(redux_saga_effects_npm_proxy_cjs[\"take\"])([react_router_redux_lib[\"LOCATION_CHANGE\"], UPDATE_BASIC_INFO_FAILURE]);\n\n        case 8:\n          _context2.next = 10;\n          return Object(redux_saga_effects_npm_proxy_cjs[\"cancel\"])(successWatcher);\n\n        case 10:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nfunction profileBasicInfoUpdateWatcher() {\n  return regeneratorRuntime.wrap(function profileBasicInfoUpdateWatcher$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return Object(redux_saga_effects_npm_proxy_cjs[\"takeLatest\"])(UPDATE_BASIC_INFO_REQUEST, confirmBasicInfoUpdateFlow);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}\n// EXTERNAL MODULE: ./node_modules/immutable/dist/immutable.js\nvar immutable = __webpack_require__(44);\n\n// EXTERNAL MODULE: ./app/containers/Login/constants.js\nvar Login_constants = __webpack_require__(14);\n\n// CONCATENATED MODULE: ./app/components/Profile/BasicInfo/reducer.js\n\n\n\nvar initialState = Object(immutable[\"fromJS\"])({\n  requesting: false,\n  success: false,\n  response: null,\n  error: null\n});\n\nfunction basicInfoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_BASIC_INFO_REQUEST:\n      return state.merge({\n        requesting: true,\n        error: null,\n        response: null,\n        success: false\n      });\n\n    case UPDATE_BASIC_INFO_SUCCESS:\n      return state.merge({\n        requesting: false,\n        error: null,\n        response: action.response.message,\n        success: true\n      });\n    // .updateIn(['user'], user => {\n    //   const userJS = user.toJS();\n    //   return fromJS({...userJS, ...action.response.data });\n    // });\n\n    case UPDATE_BASIC_INFO_FAILURE:\n      return state.merge({\n        requesting: false,\n        response: null,\n        error: action.error.message,\n        success: false\n      });\n\n    case BASIC_INFO_CLEAR_STATE:\n    case Login_constants[\"t\" /* LOGOUT_SUCCESS */]:\n      return initialState;\n\n    default:\n      return state;\n  }\n}\n\n/* harmony default export */ var reducer = (basicInfoReducer);\n// EXTERNAL MODULE: ./app/utils/injectSaga.js + 2 modules\nvar injectSaga = __webpack_require__(73);\n\n// EXTERNAL MODULE: ./app/utils/injectReducer.js + 1 modules\nvar injectReducer = __webpack_require__(67);\n\n// EXTERNAL MODULE: ./node_modules/redux/lib/redux.js\nvar redux = __webpack_require__(43);\n\n// CONCATENATED MODULE: ./app/components/Profile/BasicInfo/index.js\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction BasicInfo_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction BasicInfo_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { BasicInfo_ownKeys(source, true).forEach(function (key) { BasicInfo_defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { BasicInfo_ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction BasicInfo_defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar mapStateToProps = Object(es[\"b\" /* createStructuredSelector */])({\n  user: Object(selectors[\"e\" /* makeSelectUser */])(),\n  successResponse: selectors_makeSelectResponse(),\n  errorResponse: selectors_makeSelectError(),\n  requesting: selectors_makeSelectRequesting(),\n  success: selectors_makeSelectSuccess()\n});\n\nvar BasicInfo_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateBasicInfoRequest: function updateBasicInfoRequest(user, image) {\n      return dispatch(actions_updateBasicInfoRequest(user, image));\n    },\n    clearState: function clearState() {\n      return dispatch(basicInfoClearState());\n    }\n  };\n};\n\nvar BasicInfo_BasicInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BasicInfo, _React$Component);\n\n  function BasicInfo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, BasicInfo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(BasicInfo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"state\", {\n      data: {},\n      avatarImage: _this.props.user.get('image_name') ? \"\".concat(constants[\"b\" /* DOCUMENT_URL_UPDATE */]).concat(_this.props.user.get('image_name')) : null,\n      imageFile: null,\n      cropDialog: false,\n      date: null,\n      focused: false,\n      errors: {}\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"handleCheckBox\", function (e) {\n      e.persist();\n\n      _this.setState(function (state) {\n        return {\n          data: BasicInfo_objectSpread({}, state.data, BasicInfo_defineProperty({}, e.target.name, !_this.state.data[e.target.name]))\n        };\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"handleDateChange\", function (date) {\n      _this.setState(function (state) {\n        return {\n          data: BasicInfo_objectSpread({}, state.data, {\n            birth_date: date\n          })\n        };\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.persist();\n      var errors = _this.state.errors;\n      delete errors[e.target.name];\n\n      _this.setState(function (state) {\n        return {\n          data: BasicInfo_objectSpread({}, state.data, BasicInfo_defineProperty({}, e.target.name, e.target.value))\n        };\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"handleDropDown\", function (e, se) {\n      var errors = _this.state.errors;\n      if (!!errors[se.name] && !!se.value) delete errors[se.name];\n\n      _this.setState({\n        errors: errors\n      });\n\n      _this.setState({\n        data: BasicInfo_objectSpread({}, _this.state.data, BasicInfo_defineProperty({}, se.name, se.value))\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"onDrop\", function (imgFile) {\n      imgFile[0].preview = URL.createObjectURL(imgFile[0]);\n\n      _this.setState({\n        imageFile: imgFile[0],\n        avatarImage: imgFile[0].preview,\n        newImage: true,\n        cropDialog: true\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"setEditorRef\", function (editor) {\n      return _this.editor = editor;\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"onCrop\", function (e) {\n      e.preventDefault();\n\n      if (_this.editor) {\n        var canvas = _this.editor.getImage().toDataURL();\n\n        fetch(canvas).then(function (res) {\n          return res.blob();\n        }).then(function (blob) {\n          var file = new File([blob], 'profilepic.jpg');\n\n          _this.setState({\n            imageFile: file,\n            avatarImage: canvas,\n            cropDialog: false\n          });\n        });\n      }\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"validate\", function () {\n      var data = _this.state.data;\n      var errors = {};\n      if (!data.first_name) errors.first_name = 'Can\\'t be blank';\n      if (!data.company_name) errors.company_name = 'Can\\'t be blank';\n      if (!data.industry) errors.industry = 'Can\\'t be blank';\n      if (data.first_name && data.first_name.length > 26) errors.first_name = 'Can\\'t be more than 26 characters';\n      if (data.first_name && data.first_name.length < 3) errors.first_name = \"Can't be less than 3 characters\";\n      if (data.first_name && !/^[a-zA-Z]+$/.test(data.first_name)) errors.first_name = 'Can only contain letters';\n      if (!data.last_name) errors.last_name = 'Can\\'t be blank';\n      if (data.last_name && data.last_name.length > 26) errors.last_name = 'Can\\'t be more than 26 characters';\n      if (data.last_name && data.last_name.length < 3) errors.last_name = 'Can\\'t be less than 3 characters';\n      if (data.last_name && !/^[a-zA-Z]+$/.test(data.last_name)) errors.last_name = 'Can only contain letters';\n      return errors;\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"handleNewImage\", function (e) {\n      e.preventDefault();\n\n      _this.setState({\n        avatarImage: e.target.files[0]\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"handleRadioChange\", function (e, _ref) {\n      var name = _ref.name,\n          value = _ref.value;\n      return _this.setState({\n        data: BasicInfo_objectSpread({}, _this.state.data, BasicInfo_defineProperty({}, name, value))\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          data = _this$state.data,\n          imageFile = _this$state.imageFile;\n\n      var errors = _this.validate();\n\n      _this.setState({\n        newImage: false,\n        errors: errors\n      });\n\n      if (Object.keys(errors).length === 0) {\n        if (imageFile) {\n          _this.props.updateBasicInfoRequest(data, imageFile);\n        } else {\n          _this.props.updateBasicInfoRequest(data);\n        }\n      }\n\n      ;\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"onDateChange\", function (date) {\n      return _this.setState({\n        date: date\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"onFocusChange\", function (_ref2) {\n      var focused = _ref2.focused;\n      return _this.setState({\n        focused: focused\n      });\n    });\n\n    BasicInfo_defineProperty(_assertThisInitialized(_this), \"isOutsideRange\", function (day) {\n      return !day.isBefore(Object(moment[\"a\" /* default */])());\n    });\n\n    return _this;\n  }\n\n  _createClass(BasicInfo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.user.size > 0) {\n        var userObj = this.props.user.toJS();\n        if (userObj.birth_date) this.setState(function (state) {\n          return {\n            date: Object(moment[\"a\" /* default */])(userObj.birth_date, 'MM-DD-YYYY')\n          };\n        });\n        if (userObj.image_name) this.setState(function (state) {\n          return {\n            avatarImage: \"\".concat(constants[\"b\" /* DOCUMENT_URL_UPDATE */]).concat(userObj.image_name)\n          };\n        });\n        this.setState(function (state) {\n          return {\n            data: BasicInfo_objectSpread({}, userObj)\n          };\n        });\n      }\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      if (nextProps.user !== this.props.user) {\n        var userObj = nextProps.user.toJS();\n        if (userObj.birth_date) this.setState(function (state) {\n          return {\n            date: Object(moment[\"a\" /* default */])(userObj.birth_date, 'MM-DD-YYYY')\n          };\n        });\n        if (userObj.image_name) this.setState(function (state) {\n          return {\n            avatarImage: \"\".concat(constants[\"b\" /* DOCUMENT_URL_UPDATE */]).concat(userObj.image_name)\n          };\n        });\n        this.setState(function (state) {\n          return {\n            data: BasicInfo_objectSpread({}, userObj)\n          };\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.clearState();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          data = _this$state2.data,\n          avatarImage = _this$state2.avatarImage,\n          date = _this$state2.date,\n          focused = _this$state2.focused,\n          newImage = _this$state2.newImage,\n          errors = _this$state2.errors,\n          cropDialog = _this$state2.cropDialog;\n      var _this$props = this.props,\n          successResponse = _this$props.successResponse,\n          errorResponse = _this$props.errorResponse,\n          requesting = _this$props.requesting;\n      var message;\n\n      if (successResponse && typeof successResponse === 'string') {\n        message = react_default.a.createElement(Toaster[\"a\" /* default */], {\n          message: successResponse,\n          timeout: 3000,\n          success: true\n        });\n      }\n\n      if (errorResponse && typeof errorResponse === 'string') {\n        message = react_default.a.createElement(Toaster[\"a\" /* default */], {\n          message: errorResponse,\n          timeout: 3000,\n          error: true\n        });\n      } // todo: clean too many parameters in BasicInfoForm\n\n\n      return react_default.a.createElement(\"div\", {\n        className: \"row\"\n      }, react_default.a.createElement(\"div\", {\n        className: \"col-lg-8\"\n      }, react_default.a.createElement(\"div\", {\n        className: \"profile_section\"\n      }, react_default.a.createElement(react_default.a.Fragment, null, message && message, react_default.a.createElement(BasicInfo_BasicInfoForm, {\n        date: date,\n        cropDialog: cropDialog,\n        focused: focused,\n        onDateChange: this.onDateChange,\n        onFocusChange: this.onFocusChange,\n        isOutsideRange: this.isOutsideRange,\n        user: data,\n        avatarImage: avatarImage,\n        onDrop: this.onDrop,\n        handleChange: this.handleChange,\n        handleDropDown: this.handleDropDown,\n        handleSubmit: this.handleSubmit,\n        isLoading: requesting,\n        datechange: this.handleDateChange,\n        handleCheckBox: this.handleCheckBox,\n        handleGenderChange: this.handleRadioChange,\n        setEditorRef: this.setEditorRef,\n        onCrop: this.onCrop,\n        newImage: newImage,\n        errors: errors\n      })))));\n    }\n  }]);\n\n  return BasicInfo;\n}(react_default.a.Component);\n\nBasicInfo_defineProperty(BasicInfo_BasicInfo, \"propTypes\", {\n  updateBasicInfoRequest: prop_types_default.a.func.isRequired,\n  clearState: prop_types_default.a.func.isRequired,\n  user: prop_types_default.a.object.isRequired\n});\n\nvar withReducer = Object(injectReducer[\"a\" /* default */])({\n  key: 'updateBasicInfo',\n  reducer: reducer\n});\nvar withSaga = Object(injectSaga[\"a\" /* default */])({\n  key: 'updateBasicInfo',\n  saga: profileBasicInfoUpdateWatcher\n});\nvar withConnect = Object(lib[\"connect\"])(mapStateToProps, BasicInfo_mapDispatchToProps);\n/* harmony default export */ var Profile_BasicInfo = __webpack_exports__[\"default\"] = (Object(redux[\"compose\"])(withReducer, withSaga, withConnect)(BasicInfo_BasicInfo));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1449\n")}}]);